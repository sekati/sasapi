/** * com.sekati.external.MouseWheel * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package com.sekati.external {	import com.sekati.validate.OSValidation;	import com.sekati.events.ExternalMouseWheelEvent;	import flash.external.ExternalInterface;	import flash.display.*;	/**	 * MouseWheel support for Mac & PC. Requires: sasapi.js	 */	public class MouseWheel {		private static var _isMac:Boolean = OSValidation.isMac( );		private static var _cb:Boolean;		private static var _topLevel:Sprite;		/**		 * initialize MouseWheel support for mac/pc and add object as Mouse listener		 * @param topLevel (Sprite) - top level to dispatch event from		 * @return void		 * <code>		 * 	MouseWheel.init( );		 * </code>		 */		public static function init(topLevel:Sprite):void {			if(!_cb && _isMac) {				_topLevel = topLevel;				_cb = ExternalInterface.addCallback( "externalMouseEvent", MouseWheel.externalMouseEvent );			}		}		/**		 * Catch callback from javascript and broadcast MouseWheel event for Mac's		 * @param delta (Number)		 * @return void		 */		private static function externalMouseEvent(delta:Number):void {			//Broadcaster.$.broadcast( "onMouseWheel", delta );				_topLevel.dispatchEvent( new ExternalMouseWheelEvent( ExternalMouseWheelEvent.MOUSE_WHEEL, delta ) );		}			}}