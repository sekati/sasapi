/** * com.sekati.external.MouseWheel * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package com.sekati.external {	import com.sekati.validate.OSValidation;	import flash.external.ExternalInterface;	import flash.utils.Timer;	import flash.events.TimerEvent;	/**	 * MouseWheel support for Mac & PC. Requires: sasapi.js	 */	public class MouseWheel {		public static var MouseWheelHandler:Function;		private static var _isMac:Boolean = OSValidation.isMac( );		/**		 * initialize MouseWheel support for mac/pc and add object as Mouse listener		 * @return void		 * <code>		 * 	MouseWheel.init( );		 * </code>		 */		public static function init():void {			if (!_isMac) {				trace( "NOT A MAC!" );					return;			}			if (ExternalInterface.available) {				try {					ExternalInterface.addCallback( "externalMouseEvent", MouseWheelHandler );					//ExternalInterface.addCallback( "externalMouseEvent", MouseWheel.externalMouseEvent );					if (checkJavaScriptReady( )) {						trace( "ExternalInterface is ready!" );					} else {						trace( "ExternalInterface is NOT ready :-(" );						// JavaScript not ready yet, creating timer						var readyTimer:Timer = new Timer( 100, 10 );						readyTimer.addEventListener( TimerEvent.TIMER, timerHandler );						readyTimer.start( );					}				} catch (se:SecurityError) {					trace( "Security Error: " + se.message );				} catch (e:Error) {					trace( "Error: " + e.message );				}			} else {				trace( "whaaattttt?" );			}		}		/**		 * Functions needed by ExternalInterface		 */		public static function receivedFromJavaScript(value:String):void {		}		public static function checkJavaScriptReady():Boolean {			var isReady:Boolean = ExternalInterface.call( "isReady" );			return isReady;		}		public static function timerHandler(event:TimerEvent):void {			var isReady:Boolean = checkJavaScriptReady( );			if (isReady) {				// ExternalInterface ready				trace( "ExternalInterface IS TOTALLY READY DUDE :=)" );				Timer( event.target ).stop( );			}		}		/**		 * Catch callback from javascript and broadcast MouseWheel event for Mac's		 * @param delta (Number)		 * @return void		 */		public static function externalMouseEvent(delta:Number):void {			trace( "externalMouseEvent::::::::::::::::: " + delta );			//Broadcaster.$.broadcast( "onMouseWheel", delta );				//_topLevel.dispatchEvent( new ExternalMouseWheelEvent( ExternalMouseWheelEvent.MOUSE_WHEEL, delta ) );		}			}}