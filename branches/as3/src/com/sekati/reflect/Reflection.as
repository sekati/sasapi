/** * com.sekati.reflect.Reflection * @version 1.0.0 * @author jason m horwitz | sekati.com | tendercreative.com * Copyright (C) 2007  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */ package com.sekati.reflect {	import flash.utils.describeType;	import flash.utils.getQualifiedClassName;	/**	 * Reflection provides a central, standarized reflection API for SASAPI.	 */	public class Reflection {		/**		 * Return the fully qualified Class name of the object.		 * @param o		 * @return String		 */		public static function getFullyQualifiedClassName(o:*):String {			return getQualifiedClassName( o );		}		/**		 * Return the Class name of the object		 * @param o		 * @return String		 */		public static function getClassName(o:*):String {			var c:String = getFullyQualifiedClassName( o );			var s:String = (c == "String" ? o : c.split( "::" )[1] || c);			return s;					}		/**		 * Return the package of the class object.		 * @param o		 * @return String		 */		public static function getPackageName(o:*):String {			return getFullyQualifiedClassName(o).split("::").shift();		}		/**		 * Static Constructor		 */		public function Reflection() {			var msg:String = "Reflection is a static class and should not be instantiated.";			throw new Error( msg, 0 );		}	}}