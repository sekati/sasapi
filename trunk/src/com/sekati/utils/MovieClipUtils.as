/** * com.sekati.utils.MovieClipUtils * @version 1.3.3 * @author jason m horwitz | sekati.com * Copyright (C) 2007  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */  /**  * static class wrapping various MovieClip utilities  */class com.sekati.utils.MovieClipUtils {	/**	 * absolute remove movieclip	 * @param mc (MovieClip)	 * @return Void	 */	public static function rmClip (mc:MovieClip):Void {		mc.swapDepths (mc._parent.getNextHighestDepth());		mc.removeMovieClip ();	}	/**	 * set color of a movieclip or textfield	 * @param obj (Object)	 * @param hex (Number)	 * @return Void	 */	public static function setColor (obj:Object,hex:Number):Void {		var c:Color=new Color(obj);		c.setRGB (hex);	}	/**	 * get color from movieclip	 * @param obj (Object)	 * @return Number	 */	public static function getColor (obj:MovieClip):Number {		var c:Color=new Color(obj);		return c.getRGB();	}	/**	 * recursively set cacheAsBitmap property on top level clip and all children	 * since var i is a string use mc[i] to refer to the mc - recurses max 256 levels	 */	public static function recursiveCache(mc:MovieClip):Void {		mc.cacheAsBitmap = true;		for (var i in mc) {			if (typeof (mc[i]) == "movieclip") {				MovieClipUtils.recursiveCache (mc[i]);			}		}	}		private function MovieClipUtils(){}	//}// eof